TODO:
· Still not too happy about the way RSS feeds are done, going to rework.
· Fix some of the heuristics, default to safe() rather than raw() more often.
  This is based on usage, but it breaks compatibility, so it'll require
  some caution.  (Possibly make it configurable or part of blocks' state.)
· SVG, when I come up with (or someone else suggests) a reasonable API.

Ongoing:
· Separate the tags by close type in the various View sub-classes.  (The most
  tedious thing on the list, but required for compliance.) My current strategy
  is to run things through validator.w3c.org and whenever it complains, I change
  the tag.

Speculative (i.e., these may be bad ideas and they might not ever get done):
· HTML5 microdata serialization using Schema.org conventions.  This should
  work as easily as JSON serialization in a perfect world.
· Possibly add some higher-level patterns for Bootstrap/Foundation/etc.
  Ideally, they end up presenting the same API, so changing a parent class
  or a mixin is all that is needed to change frameworks.
· Integrate HTML validation into the tests, and make some validation tests.
· html2hoshi should possibly move to its own gem.
· html2hoshi uses hpricot.  (hpricot still works fine, though.)
· Expanding the DSL for views.  There are not a lot of things I've missed in
  the API so far, though, and the special-cased things are largely unused.
